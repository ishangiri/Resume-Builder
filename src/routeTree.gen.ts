/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as ResumeResumeIDImport } from './routes/Resume/$resumeID'
import { Route as AuthRoutesRegisterpageImport } from './routes/AuthRoutes/registerpage'
import { Route as AuthRoutesLoginpageImport } from './routes/AuthRoutes/loginpage'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ResumeResumeIDRoute = ResumeResumeIDImport.update({
  id: '/Resume/$resumeID',
  path: '/Resume/$resumeID',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoutesRegisterpageRoute = AuthRoutesRegisterpageImport.update({
  id: '/AuthRoutes/registerpage',
  path: '/AuthRoutes/registerpage',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoutesLoginpageRoute = AuthRoutesLoginpageImport.update({
  id: '/AuthRoutes/loginpage',
  path: '/AuthRoutes/loginpage',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/AuthRoutes/loginpage': {
      id: '/AuthRoutes/loginpage'
      path: '/AuthRoutes/loginpage'
      fullPath: '/AuthRoutes/loginpage'
      preLoaderRoute: typeof AuthRoutesLoginpageImport
      parentRoute: typeof rootRoute
    }
    '/AuthRoutes/registerpage': {
      id: '/AuthRoutes/registerpage'
      path: '/AuthRoutes/registerpage'
      fullPath: '/AuthRoutes/registerpage'
      preLoaderRoute: typeof AuthRoutesRegisterpageImport
      parentRoute: typeof rootRoute
    }
    '/Resume/$resumeID': {
      id: '/Resume/$resumeID'
      path: '/Resume/$resumeID'
      fullPath: '/Resume/$resumeID'
      preLoaderRoute: typeof ResumeResumeIDImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/AuthRoutes/loginpage': typeof AuthRoutesLoginpageRoute
  '/AuthRoutes/registerpage': typeof AuthRoutesRegisterpageRoute
  '/Resume/$resumeID': typeof ResumeResumeIDRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/AuthRoutes/loginpage': typeof AuthRoutesLoginpageRoute
  '/AuthRoutes/registerpage': typeof AuthRoutesRegisterpageRoute
  '/Resume/$resumeID': typeof ResumeResumeIDRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/AuthRoutes/loginpage': typeof AuthRoutesLoginpageRoute
  '/AuthRoutes/registerpage': typeof AuthRoutesRegisterpageRoute
  '/Resume/$resumeID': typeof ResumeResumeIDRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/AuthRoutes/loginpage'
    | '/AuthRoutes/registerpage'
    | '/Resume/$resumeID'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/AuthRoutes/loginpage'
    | '/AuthRoutes/registerpage'
    | '/Resume/$resumeID'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/AuthRoutes/loginpage'
    | '/AuthRoutes/registerpage'
    | '/Resume/$resumeID'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  AuthRoutesLoginpageRoute: typeof AuthRoutesLoginpageRoute
  AuthRoutesRegisterpageRoute: typeof AuthRoutesRegisterpageRoute
  ResumeResumeIDRoute: typeof ResumeResumeIDRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  AuthRoutesLoginpageRoute: AuthRoutesLoginpageRoute,
  AuthRoutesRegisterpageRoute: AuthRoutesRegisterpageRoute,
  ResumeResumeIDRoute: ResumeResumeIDRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/AuthRoutes/loginpage",
        "/AuthRoutes/registerpage",
        "/Resume/$resumeID"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/AuthRoutes/loginpage": {
      "filePath": "AuthRoutes/loginpage.tsx"
    },
    "/AuthRoutes/registerpage": {
      "filePath": "AuthRoutes/registerpage.tsx"
    },
    "/Resume/$resumeID": {
      "filePath": "Resume/$resumeID.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
