/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ResumeResumeIDRouteImport } from './routes/Resume/$resumeID'
import { Route as AuthRoutesRegisterpageRouteImport } from './routes/AuthRoutes/registerpage'
import { Route as AuthRoutesLoginpageRouteImport } from './routes/AuthRoutes/loginpage'

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ResumeResumeIDRoute = ResumeResumeIDRouteImport.update({
  id: '/Resume/$resumeID',
  path: '/Resume/$resumeID',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoutesRegisterpageRoute = AuthRoutesRegisterpageRouteImport.update({
  id: '/AuthRoutes/registerpage',
  path: '/AuthRoutes/registerpage',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoutesLoginpageRoute = AuthRoutesLoginpageRouteImport.update({
  id: '/AuthRoutes/loginpage',
  path: '/AuthRoutes/loginpage',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/AuthRoutes/loginpage': typeof AuthRoutesLoginpageRoute
  '/AuthRoutes/registerpage': typeof AuthRoutesRegisterpageRoute
  '/Resume/$resumeID': typeof ResumeResumeIDRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/AuthRoutes/loginpage': typeof AuthRoutesLoginpageRoute
  '/AuthRoutes/registerpage': typeof AuthRoutesRegisterpageRoute
  '/Resume/$resumeID': typeof ResumeResumeIDRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/AuthRoutes/loginpage': typeof AuthRoutesLoginpageRoute
  '/AuthRoutes/registerpage': typeof AuthRoutesRegisterpageRoute
  '/Resume/$resumeID': typeof ResumeResumeIDRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/AuthRoutes/loginpage'
    | '/AuthRoutes/registerpage'
    | '/Resume/$resumeID'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/AuthRoutes/loginpage'
    | '/AuthRoutes/registerpage'
    | '/Resume/$resumeID'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/AuthRoutes/loginpage'
    | '/AuthRoutes/registerpage'
    | '/Resume/$resumeID'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  AuthRoutesLoginpageRoute: typeof AuthRoutesLoginpageRoute
  AuthRoutesRegisterpageRoute: typeof AuthRoutesRegisterpageRoute
  ResumeResumeIDRoute: typeof ResumeResumeIDRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Resume/$resumeID': {
      id: '/Resume/$resumeID'
      path: '/Resume/$resumeID'
      fullPath: '/Resume/$resumeID'
      preLoaderRoute: typeof ResumeResumeIDRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/AuthRoutes/registerpage': {
      id: '/AuthRoutes/registerpage'
      path: '/AuthRoutes/registerpage'
      fullPath: '/AuthRoutes/registerpage'
      preLoaderRoute: typeof AuthRoutesRegisterpageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/AuthRoutes/loginpage': {
      id: '/AuthRoutes/loginpage'
      path: '/AuthRoutes/loginpage'
      fullPath: '/AuthRoutes/loginpage'
      preLoaderRoute: typeof AuthRoutesLoginpageRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  AuthRoutesLoginpageRoute: AuthRoutesLoginpageRoute,
  AuthRoutesRegisterpageRoute: AuthRoutesRegisterpageRoute,
  ResumeResumeIDRoute: ResumeResumeIDRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
